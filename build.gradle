buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://jitpack.io/" }

    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'

    }
}

apply plugin: 'net.minecraftforge.gradle'

//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'


version = "1.0"
group = "fr.nathanael2611.modularvoicechat" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ModularVoiceChat"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20200119-1.14.4'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('runServer')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { url = "https://jitpack.io/" }
}

configurations {
    internal
    compile.extendsFrom(internal)
}



dependencies {
    minecraft 'net.minecraftforge:forge:1.14.4-28.2.3'

    compile fileTree(dir: 'libs', include: '*.jar')
}
jar {
    manifest {
        attributes([
                "Specification-Title": "ModularVoiceChat",
                "Specification-Vendor": "Nathanael2611",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"ZeEvoker2Vex",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
/*
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
*/

shadowJar {
//    configurations = [project.configurations.compile]

    /*
    relocate 'org.apache.commons.collections4', 'fr.nathanael2611.repack.org.apache.commons.collections4'
    relocate 'gnu.trove', 'fr.nathanael2611.repack.gnu.trove'
    relocate "com.neovisionaries.ws.client", "fr.nathanael2611.repack.com.neovisionaries.ws.client"
    relocate "com.iwebpp.crypto", "fr.nathanael2611.repack.com.iwebpp.crypto"
    relocate "net.dv8tion.jda", "fr.nathanael2611.repack.net.dv8tion.jda"
    relocate "org.json", "fr.nathanael2611.repack.org.json"
    relocate "okio", "fr.nathanael2611.repack.okio"
    relocate "okhttp3", "fr.nathanael2611.repack.okhttp3"
    relocate "okhttp3", "fr.nathanael2611.repack.okhttp3"
    relocate "org.slf4j", "fr.nathanael2611.repack.org.slf4j"*/
}
reobf {
    shadowJar { }
}

artifacts {
    archives shadowJar
}
